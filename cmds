prometheus-3.5.0.linux-amd64]$ ps aux | grep './prometheus --config.file=prometheus.yml' | grep -v grep | awk '{print $2}' | xargs kill -9

sudo vi /etc/systemd/system/prometheus.service      ##to create a sevice on linux
https://www.youtube.com/watch?v=Sws9rd_tKHs&list=PLVCgi5HZ0-Ytx5J5fp7A4HG5HreQ-7ZMg&index=6 (Ref)

cat /etc/os-release

USAGE=$(df -h /var/log | awk 'NR==2 {gsub("%",""); print $5}')
https://chatgpt.com/c/68933c11-b25c-8332-9339-41ac3a67d6ab


sudo adduser <>



nano ~/.bashrc
export PATH="/usr/local/pgsql/bin:$PATH"
source ~/.bashrc
which psql





df -h 
fdisk ls
fdisk <diskname>   #create partition on disk
/etc/fstab
mount
umount
mkfs 
mkswap
swapon -a 
swapoff 
swapon -c
free -h


ls --help
man ls
man man
man 1 printf
man 3 printf
apropos <command keword> first time may be an error rely on dropdb
sudo mandb
apropos -s 1,8  <command keword>

stat target_file
#####hard link
ln target_file link_file.  #cant create a hard link on a dir also cant create a hard on two different file systems
# changing the permission of one link leads to change the permission of all links because inode update the permission
# delete a file => technically data blocks are not erased but marked unused so that system can then with new data

####soft link
ln -s target_file link_file
can create the symbolic link for dir also
but symlink broken if target file is moved ar deleted

tail -n 20 log_file (by default 10)
head -n 20 log_file (by default 10)
sed -i 's/canda/canada/g' userinfo.txt (-i(in place) without i only preview no change)
(s substitute search and replace , g for globalall occurance in the lin, w/o g only first occurance will be replace)
 sed -i 's/disabled/enabled/gi' values.conf
  sed -i '500,2000s/enabled/disabled/gi' values.conf
  sed -i 's~#%$2jh//238720//31223~$2//23872031223~g' /home/bob/data.txt
 cut -d ' ' -f 1 userinfo.txt
 sort countries.txt | uniq

 sudo systemctl reboot 
 sudo syatemctl poweroff                    
 --force --force 
 sudo shutdown 2:00 or +15
 sudo shutdown -r 2:00 or +15
 --reboot

 systemctl get-default
 sudo systemctl set-default multi-user.target
 sudo systemctl isolate graphical.target
 emergency.target
 rescue.target

 sudo journalctl --unit=ssh.service -n 20 --no-pager
 10 5 db_cleanup /usr/bin/touch /root/anacron_created_this

 sudo systemctl restart nginx


 df -h
 du -sh /usr/
 free -h
 lscpu
ip link (networ devices or NIC)
ip -c addr      (colord ip address of interfaces)
sudo ip link set dev <nic> up/down
sudo ip addr add/delete 10.0.0.40/24 dev enp0s8        (assign ip address to an interface)
sudo netplan get
cd /etc/netplan
cat 50-cloud-init.yaml
sudo netplan apply
sudo netplan try

nish@nishmac:~$ route
Kernel IP routing table
Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
default         _gateway        0.0.0.0         UG    100    0        0 enp0s1
192.168.64.0    0.0.0.0         255.255.255.0   U     100    0        0 enp0s1
ip route add <dest ip> via <gateway ip>
ip route add defalt via <gateway ip>        (to any unkwon n/w use gateway ip)

nish@nishmac:~$ cat /proc/sys/net/ipv4/ip_forward (by setting it to 1 the device will act as route and all nic of the device communicate to all the nic)
0
nish@nishmac:~$ cat /etc/sysctl.conf | grep net.ipv4.ip_forward
#net.ipv4.ip_forward=1

cat /etc/hosts 
cat /etc/resolv.conf    => nameserver 
By default /etc/hosts have priority over /etc/resolv.conf 
but can be changed using /etc/nsswitch.conf
hosts:          files mdns4_minimal [NOTFOUND=return] dns (alter the position of files and dns)


nslookup and dig(more detailed o/p) dont look/query for entries in /etc/hosts only resolve from dns servers

createnew n/w namespace on linux host
ip netns add red
ip netns ad blue
ip netns ( to list n/w ns)
ip netns exec red ip link / ip -n red link (nic for ns i.e ip link will be executed in red n/w namespace)
ip netns exec red arp
ip netns exec red route
ip link add veth-red type veth peer name veth-blue. (connecting to namespaces)
ip link set veth-red netns red (attach virtual interfaces to namespaces)
ip link set veth-blue netns blue
ip -n red addr add 192.168.15.1 dev veth-red (assign ip to veth)
ip -n blue addr add 192.168.15.2 dev veth-blue
ip -n red link set veth-red up
ip -n blue link set veth-blue up
ip netns exec red ping 192.168.15.2. (now successfully receieving icmp response back)
ip -n red link delete veth-red ( delete and automaticall other side connecting i/f veth-blue will automatically delete)

now added more namespace so to connect each other use virtual switch

ip link add v-net-0 type bridge (create a n/w i/f on host)
ip link ( the above interface will also be listed )
ip link set dev v-net-0 up ( it will act as switch for namespace and i/f for the host)
ip link add veth-red type veth peer name veth-eth-br
ip link add veth-red type veth peer name veth-eth-br
ip link set veth-red/blue netns red/blue
ip link set veth-red/blue-br master v-net-0
ip -n red addr add 192.168.15.1 dev veth-red (assign ip to veth)
ip -n blue addr add 192.168.15.2 dev veth-blue
ip -n red link set veth-red up
ip -n blue link set veth-blue up
ip addr add 192.168.15.5/24 dev v-net-0      (now host and virtual internal n/w can connect)
iptables -t mat -A POSTROUTING -s 192.168.15.0/24 -j MASQUERADE
iptables -t nat -A PREROUTING --dport 80 --to-destination 192.168.15.2:80 -j DNAT
